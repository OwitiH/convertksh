---
interface FAQItem {
  question: string;
  answer: string;
}

const { faqItems, pageUrl = 'https://convertksh.xyz' } = Astro.props;

// Create the FAQPage schema
const faqPage = {
  "@context": "https://schema.org",
  "@type": "FAQPage",
  "mainEntity": faqItems.map((item: FAQItem) => ({
    "@type": "Question",
    "name": item.question.trim(),
    "acceptedAnswer": {
      "@type": "Answer",
      "text": item.answer.replace(/\s+/g, ' ').trim()
    }
  }))
};

// Format FAQ items for display
const formattedFaqItems = faqItems.map(item => ({
  question: item.question.trim(),
  answer: item.answer.trim()
}));
---

<!-- FAQ Schema for Rich Results (JSON-LD only) -->
<script type="application/ld+json">
  {JSON.stringify(faqPage, null, 2)}
</script>

<!-- FAQ Content (visible to users) -->
<div class="space-y-6 mt-8">
  {formattedFaqItems.map((item, index) => (
    <div 
      id={`faq-${index + 1}`}
      class="border-b border-gray-700 pb-6 last:border-0 last:pb-0"
    >
      <h3 class="text-lg font-semibold mb-2">
        {item.question}
      </h3>
      <div class="text-gray-300 mt-2">
        <div 
          class="prose prose-invert max-w-none"
          set:html={item.answer.replace(/\n/g, '<br>')}
        />
      </div>
    </div>
  ))}
</div>
